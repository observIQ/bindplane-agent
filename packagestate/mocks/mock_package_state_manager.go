// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	protobufs "github.com/open-telemetry/opamp-go/protobufs"

	testing "testing"
)

// MockPackageStateManager is an autogenerated mock type for the PackageStateManager type
type MockPackageStateManager struct {
	mock.Mock
}

// LoadStatuses provides a mock function with given fields:
func (_m *MockPackageStateManager) LoadStatuses() (*protobufs.PackageStatuses, error) {
	ret := _m.Called()

	var r0 *protobufs.PackageStatuses
	if rf, ok := ret.Get(0).(func() *protobufs.PackageStatuses); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*protobufs.PackageStatuses)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SaveStatuses provides a mock function with given fields: statuses
func (_m *MockPackageStateManager) SaveStatuses(statuses *protobufs.PackageStatuses) error {
	ret := _m.Called(statuses)

	var r0 error
	if rf, ok := ret.Get(0).(func(*protobufs.PackageStatuses) error); ok {
		r0 = rf(statuses)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockPackageStateManager creates a new instance of MockPackageStateManager. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockPackageStateManager(t testing.TB) *MockPackageStateManager {
	mock := &MockPackageStateManager{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
