version: 0.1.0
title: Ubiquiti
description: Log parser for Ubiquiti Unifi Devices
parameters:
  - name: listen_port
    description: A port which the agent will listen for syslog messages
    type: int
    default: 514
  - name: listen_ip
    description: The local IP address to listen for syslog connections on
    type: string
    default: "0.0.0.0"
  - name: timezone
    description: Timezone to use when parsing the timestamp
    type: timezone
    default: UTC

template: |
  receivers:
    udplog:
      listen_address: "{{ .listen_ip }}:{{ .listen_port }}"
      add_attributes: true
      operators:
        - type: router
          default: add_type
          routes:
            - expr: 'body matches "^<\\d+>\\w{3}\\s*\\d{1,2}\\s*\\d{2}:\\d{2}:\\d{2}\\s*[^,]*,[^:]*:(\\s*)?[^:]*(\\s*)?:[\\s\\S]*"'
              output: ac_lite_ap_parser
            - expr: 'body matches "^<[^>]+>[^ ]*\\s*[^,]*,[^,]*,[^:]*:(\\s*)?[^:]*:(\\s*)?[\\s\\S]*"'
              output: flex_mini_parser
            - expr: 'body matches "^<\\d+>[\\s\\S]*"'
              output: catch_all_parser

        # This pattern is known to match AC Lite access points
        - id: ac_lite_ap_parser
          type: regex_parser
          regex: '^<(?P<priority>[^>]+)>(?P<timestamp_field>\w{3}\s*\d{1,2}\s*\d{2}:\d{2}:\d{2})\s*(?P<mac_address>[^,]*),(?P<device>[^:]*):(\s*)?(?P<process>[^:]*)(\s*)?:(?P<message>[\s\S]*)'
          timestamp:
            parse_from: attributes.timestamp_field
            layout_type: gotime
            layout: 'Jan 2 15:04:05'
            location: {{ .timezone }}
          output: promote_device

        # This pattern is known to match Flex Mini switches
        - id: flex_mini_parser
          type: regex_parser
          regex: '^<(?P<priority>[^>]+)>(?P<name>[^ ]*)\s*(?P<device>[^,]*),(?P<mac_address>[^,]*),(?P<firmware_version>[^:]*):(\s*)?(?P<service>[^:]*):(\s*)?(?P<message>[\s\S]*)'
          output: promote_name


        # promote name field to resource. name is specific to flex_mini_parser.
        - id: promote_name
          type: move
          from: attributes.name
          if: 'attributes.name != nil'
          to: 'resource["name"]'
          output: promote_device

        # promote device field to resource
        - id: promote_device
          type: move
          if: 'attributes.device != nil'
          from: attributes.device
          to: 'resource["device"]'
          output: severity_parser

        # Catch all will parse any message that is prefixed with a priority value
        # such as: <13>some message
        - id: catch_all_parser
          type: regex_parser
          regex: '^<(?P<priority>[^>]+)>(?P<message>[\s\S]*)'
          output: severity_parser

        - type: severity_parser
          if: 'attributes.priority != nil'
          parse_from: attributes.priority
          mapping:
            fatal2: [0,8,16,24,32,40,48,56,64,72,80,88,96,104,112,120,128,136,144,152,160,168,176,184]
            error3: [1,9,17,25,33,41,49,57,65,73,81,89,97,105,113,121,129,137,145,153,161,169,177,185]
            error2: [2,10,18,26,34,42,50,58,66,74,82,90,98,106,114,122,130,138,146,154,162,170,178,186]
            error: [3,11,19,27,35,43,51,59,67,75,83,91,99,107,115,123,131,139,147,155,163,171,179,187]
            warn: [4,12,20,28,36,44,52,60,68,76,84,92,100,108,116,124,132,140,148,156,164,172,180,188]
            info2: [5,13,21,29,37,45,53,61,69,77,85,93,101,109,117,125,133,141,149,157,165,173,181,189]
            info: [6,14,22,30,38,46,54,62,70,78,86,94,102,110,118,126,134,142,150,158,166,174,182,190]
            debug: [7,15,23,31,39,47,55,63,71,79,87,95,103,111,119,127,135,143,151,159,167,175,183,191]
          output: add_type

        - id: add_type
          type: add
          field: attributes.log_type
          value: ubiquiti


  service:
    pipelines:
      logs:
        receivers: [udplog]
