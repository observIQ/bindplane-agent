version: 0.1.0
title: Apache Cassandra
description: Log parser for Apache Cassandra
parameters:
  - name: enable_system_logs
    description: Enable to collect apache system logs
    type: bool
    default: true
  - name: system_log_path
    description: Path to apache system logs
    type: "[]string"
    default: 
    - "/var/log/cassandra/system.log"
  - name: enable_debug_logs
    description: Enable to collect apache debug logs
    type: bool
    default: true
  - name: debug_log_path
    description: Path to apache debug logs
    type: "[]string"
    default:
    - "/var/log/cassandra/debug.log"
  - name: enable_gc_logs
    description: Enable to collect apache garbage collection logs
    type: bool
    default: true
  - name: gc_log_path
    description: Path to apache garbage collection logs
    type: "[]string"
    default:
    - "/var/log/cassandra/gc.log"
  - name: start_at
    description: At startup, where to start reading logs from the file (`beginning` or `end`)
    type: string
    valid_values:
     - beginning
     - end
    default: end
  # Cassandra timestamps do not include a timestamp, so we need to set
  # it explicitly.
  - name: timezone
    description: Timezone to use when parsing the timestamp
    type: timezone
    default: UTC
template: |
  receivers:
    {{ if .enable_system_logs }}
    filelog/system_logs:
      include:
        {{ range $fp := .system_log_path }}
        - '{{ $fp }}'
        {{ end }}
      multiline:
        line_start_pattern: '[A-Z]+\s+\[[^\]]+\]'
      start_at: {{ .start_at }}
      attributes:
        log_type: 'cassandra.system'
      operators:
        - type: regex_parser
          regex: '(?P<severity>[A-Z]+)\s+\[(?P<type>[^\]]+)\]\s+(?P<timestamp>\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2},\d{3})\s+(?P<message>.*\S)'
          severity:
            parse_from: attributes.severity
          timestamp:
            parse_from: attributes.timestamp
            layout: '%F %T,%L'
            location: {{ .timezone }}
    {{ end }}

    {{ if .enable_debug_logs }}
    filelog/debug_logs:
      include:
        {{ range $fp := .debug_log_path }}
        - '{{ $fp }}'
        {{ end }}
      multiline:
        line_start_pattern: '[A-Z]+\s+\[[^\]]+\]'
      start_at: {{ .start_at }}
      attributes:
        log_type: 'cassandra.debug'
      operators:
        - type: regex_parser
          regex: '(?P<severity>[A-Z]+)\s+\[(?P<type>[^\]]+)\]\s+(?P<timestamp>\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2},\d{3})\s+(?P<message>.*\S)'
          severity:
            parse_from: attributes.severity
          timestamp:
            parse_from: attributes.timestamp
            layout: '%F %T,%L'
            location: {{ .timezone }}
    {{ end }}

    {{ if .enable_gc_logs }}
    filelog/gc_logs:
      include:
        {{ range $fp := .gc_log_path }}
        - '{{ $fp }}'
        {{ end }}
      multiline:
        line_start_pattern: '^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}[+-]\d{4}|^OpenJDK|^Memory:|^CommandLine|^Heap'
      start_at: {{ .start_at }}
      attributes:
        log_type: 'cassandra.gc'
      operators:
      - type: regex_parser
        if: 'body matches "[0-9]{4}-[0-9]{2}-[0-9]{2}T"'
        regex: '(?P<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}[+-]\d{4}):\s+.*stopped: (?P<total_stopped_seconds>[\d\.]+).* took: (?P<stopping_threads_seconds>[\d\.]+)'
        timestamp:
          parse_from: attributes.timestamp
          layout: '%FT%T.%L%z'
          location: {{ .timezone }}
  {{ end }}

  service:
    pipelines:
      logs:
        receivers:
          {{ if .enable_system_logs }}
          - filelog/system_logs
          {{ end }}

          {{ if .enable_debug_logs }}
          - filelog/debug_logs
          {{ end }}

          {{ if .enable_gc_logs }}
          - filelog/gc_logs
          {{ end }}
