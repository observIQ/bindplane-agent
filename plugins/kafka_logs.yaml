version: 0.1.0
title: Apache Kafka
description: Log parser for Apache Kafka
parameters:
  - name: enable_server_log
    type: bool
    default: true
  - name: server_log_path
    type: "[]string"
    default: 
    - "/home/kafka/kafka/logs/server.log*"
  - name: enable_controller_log
    type: bool
    default: true
  - name: controller_log_path
    type: "[]string"
    default: 
    - "/home/kafka/kafka/logs/controller.log*"
  - name: enable_state_change_log
    type: bool
    default: true
  - name: state_change_log_path
    type: "[]string"
    default: 
    - "/home/kafka/kafka/logs/state-change.log*"
  - name: enable_log_cleaner_log
    type: bool
    default: true
  - name: log_cleaner_log_path
    type: "[]string"
    default: 
    - "/home/kafka/kafka/logs/log-cleaner.log*"
  - name: start_at
    type: string
    supported:
      - beginning
      - end
    default: end
  - name: timezone
    type: timezone
    default: UTC

template: |
  receivers:
    {{ if .enable_server_log }}
    filelog/server:
      include:
        {{ range $fp := .server_log_path }}
        - '{{ $fp }}'
        {{ end }}
      multiline:
        line_start_pattern: '\[\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3}\]'
      start_at: {{ .start_at }}
      operators:
        - type: regex_parser
          regex: '^\[(?P<time>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3})\] (?P<severity>[^ ]+) (?P<message>.*)'
          severity:
            parse_from: attributes.severity
            mapping:
              info2: notice
              error2: critical
              error3: alert
              fatal2: emergency
              fatal3: catastrophe
          timestamp:
            parse_from: attributes.time
            layout: '%F %T,%L'
            location: {{ .timezone }}

        - id: add_type
          type: add
          field: attributes.log_type
          value: 'kafka.server'
    {{ end }}

    {{ if .enable_controller_log }}
    filelog/controller:
      include:
        {{ range $fp := .controller_log_path }}
        - '{{ $fp }}'
        {{ end }}
      multiline:
        line_start_pattern: '\[\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3}\]'
      start_at: {{ .start_at }}
      operators:
        - type: regex_parser
          regex: '^\[(?P<time>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3})\] (?P<severity>[^ ]+) (?P<message>.*)'
          severity:
            parse_from: attributes.severity
            mapping:
              info2: notice
              error2: critical
              error3: alert
              fatal2: emergency
              fatal3: catastrophe
          timestamp:
            parse_from: attributes.time
            layout: '%F %T,%L'
            location: {{ .timezone }}

        - id: add_type
          type: add
          field: attributes.log_type
          value: 'kafka.controller'
    {{ end }}

    {{ if .enable_state_change_log }}
    filelog/state:
      include:
        {{ range $fp := .state_change_log_path }}
        - '{{ $fp }}'
        {{ end }}
      multiline:
        line_start_pattern: '\[\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3}\]'
      start_at: {{ .start_at }}
      operators:
        - type: regex_parser
          regex: '^\[(?P<time>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3})\] (?P<severity>[^ ]+) (?P<message>.*)'
          severity:
            parse_from: attributes.severity
            mapping:
              info2: notice
              error2: critical
              error3: alert
              fatal2: emergency
              fatal3: catastrophe
          timestamp:
            parse_from: attributes.time
            layout: '%F %T,%L'
            location: {{ .timezone }}

        - id: add_type
          type: add
          field: attributes.log_type
          value: 'kafka.state_change'
    {{ end }}

    {{ if .enable_log_cleaner_log }}
    filelog/cleaner:
      include:
        {{ range $fp := .log_cleaner_log_path }}
        - '{{ $fp }}'
        {{ end }}
      multiline:
        line_start_pattern: '\[\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3}\]'
      start_at: {{ .start_at }}
      operators:
        - type: regex_parser
          regex: '^\[(?P<time>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3})\] (?P<severity>[^ ]+) (?P<message>.*)'
          severity:
            parse_from: attributes.severity
            mapping:
              info2: notice
              error2: critical
              error3: alert
              fatal2: emergency
              fatal3: catastrophe
          timestamp:
            parse_from: attributes.time
            layout: '%F %T,%L'
            location: {{ .timezone }}

        - id: add_type
          type: add
          field: attributes.log_type
          value: 'kafka.cleaner'
    {{ end }}

  service:
    pipelines:
      logs:
        receivers:
          {{ if .enable_server_log }}
          - filelog/server
          {{ end }}

          {{ if .enable_controller_log }}
          - filelog/controller
          {{ end }}

          {{ if .enable_state_change_log }}
          - filelog/state
          {{ end }}

          {{ if .enable_log_cleaner_log }}
          - filelog/cleaner
          {{ end }}
          