version: 0.0.1
title: Couchbase
description: Log parser for Couchbase
parameters:
  - name: enable_error_log
    description: Enable to collect Couchbase error logs
    type: bool
    default: true
  - name: error_log_path
    description: The absolute path to the Couchbase error logs
    type: "[]string"
    default:
      - "/opt/couchbase/var/lib/couchbase/logs/error.log"
  - name: enable_debug_log
    description: Enable to collect Couchbase debug logs
    type: bool
    default: false
  - name: debug_log_path
    description: The absolute path to the Couchbase debug logs
    type: "[]string"
    default: 
      - "/opt/couchbase/var/lib/couchbase/logs/debug.log"
  - name: enable_info_log
    description: Enable to collect Couchbase info logs
    type: bool
    default: false
  - name: info_log_path
    description: The absolute path to the Couchbase information logs
    type: "[]string"
    default: 
      - "/opt/couchbase/var/lib/couchbase/logs/info.log"
  - name: enable_access_log
    description: Enable to collect Couchbase http access logs
    type: bool
    default: true
  - name: http_access_log_path
    description: The absolute path to the Couchbase http access logs
    type: "[]string"
    default: 
      - "/opt/couchbase/var/lib/couchbase/logs/http_access.log"
  - name: enable_internal_access_log
    description: Enable to collect Couchbase internal http access logs
    type: bool
    default: false
  - name: http_internal_access_log_path
    description: The absolute path to the Couchbase internal http access logs
    type: "[]string"
    default: 
      - "/opt/couchbase/var/lib/couchbase/logs/http_access_internal.log"
  - name: enable_babysitter_log
    description: Enable to collect Couchbase babysitter logs
    type: bool
    default: true
  - name: babysitter_log_path
    description: The absolute path to the Couchbase babysitter logs
    type: "[]string"
    default: 
      - "/opt/couchbase/var/lib/couchbase/logs/babysitter.log"
  - name: enable_xdcr_log
    description: Enable to collect Couchbase Cross Datacenter Replication logs
    type: bool
    default: false
  - name: xdcr_log_path
    description: The absolute path to the Couchbase Cross Datacenter Replication logs
    type: "[]string"
    default: 
      - "/opt/couchbase/var/lib/couchbase/logs/goxdcr.log"
  - name: start_at
    description: At startup, where to start reading logs from the file (`beginning` or `end`)
    type: string
    supported:
      - beginning
      - end
    default: end
template: |
  receivers:
    {{ if .enable_error_log}}
    filelog/error_logs:
      include: 
        {{ range $fp := .error_log_path }}
        - '{{ $fp }}'
        {{ end }}
      multiline: 
        line_start_pattern: '^\[[^:]*:[^,]*,\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d+-\d{2}:\d{2},[^@]*@[^:]*:'
      start_at: {{ .start_at }}
      attributes:
        log_type: 'couchbase.error'
      operators:
        - type: regex_parser
          regex: '^\[(?P<type>[^:]*):(?P<couchbase_severity>[^,]*),(?P<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d+-\d{2}:\d{2}),(?P<node>[^@]*)@(?P<host>[^:]*):(?P<source>[^\]]+)\](?P<message>(?s).*[^\n\s])[\n\s]*$'
          timestamp:
            parse_from: attributes.timestamp
            layout: '%Y-%m-%dT%H:%M:%S.%L%j'
          severity:
            parse_from: attributes.couchbase_severity
    {{ end }} ## end error log receiver

    {{ if .enable_debug_log}}
    filelog/debug_logs:
      include: 
        {{ range $fp := .debug_log_path }}
        - '{{ $fp }}'
        {{ end }}
      multiline: 
        line_start_pattern: '^\[[^:]*:[^,]*,\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d+-\d{2}:\d{2},[^@]*@[^:]*:'
      start_at: {{ .start_at }}
      attributes:
        log_type: 'couchbase.debug'
      operators:
        - type: regex_parser
          regex: '^\[(?P<type>[^:]*):(?P<couchbase_severity>[^,]*),(?P<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d+-\d{2}:\d{2}),(?P<node>[^@]*)@(?P<host>[^:]*):(?P<source>[^\]]+)\](?P<message>(?s).*[^\n\s])[\n\s]*$'
          timestamp:
            parse_from: attributes.timestamp
            layout: '%Y-%m-%dT%H:%M:%S.%L%j'
          severity:
            parse_from: attributes.couchbase_severity
    {{ end }} ## end debug log receiver

    {{ if .enable_info_log}}
    filelog/info_logs:
      include: 
        {{ range $fp := .info_log_path }}
        - '{{ $fp }}'
        {{ end }}
      multiline: 
        line_start_pattern: '^\[[^:]*:[^,]*,\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d+-\d{2}:\d{2},[^@]*@[^:]*:'
      start_at: {{ .start_at }}
      attributes:
        log_type: 'couchbase.info'
      operators:
        - type: regex_parser
          regex: '^\[(?P<type>[^:]*):(?P<couchbase_severity>[^,]*),(?P<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d+-\d{2}:\d{2}),(?P<node>[^@]*)@(?P<host>[^:]*):(?P<source>[^\]]+)\](?P<message>(?s).*[^\n\s])[\n\s]*$'
          timestamp:
            parse_from: attributes.timestamp
            layout: '%Y-%m-%dT%H:%M:%S.%L%j'
          severity:
            parse_from: attributes.couchbase_severity
    {{ end }} ## end info log receiver

    {{ if .enable_access_log}}
    filelog/access_logs:
      include: 
        {{ range $fp := .http_access_log_path }}
        - '{{ $fp }}'
        {{ end }}
      start_at: {{ .start_at }}
      attributes:
        log_type: 'couchbase.http.access'
      operators:
        - type: regex_parser
          regex: '(?P<ip_address>\d+.\d+.\d+.\d+)\s+(?P<user_identifier>.*) \[(?P<timestamp>\d{2}\/\w+\/\d{4}:\d{2}:\d{2}:\d{2} -\d{4})\] \\*"(?P<request_line>[^"]*)\\*" (?P<status>\d{3}) (?P<size>\d*) *-*(?P<message>.*)'
          timestamp:
            parse_from: attributes.timestamp
            layout: '%d/%b/%Y:%H:%M:%S %z'
          severity:
            parse_from: attributes.status
            preset: none
            mapping:
              info: 2xx
              info2: 3xx
              warn: 4xx
              error: 5xx
    {{ end }} ## end http access log receiver

    {{ if .enable_internal_access_log}}
    filelog/internal_access_logs:
      include: 
        {{ range $fp := .http_internal_access_log_path }}
        - '{{ $fp }}'
        {{ end }}
      start_at: {{ .start_at }}
      attributes:
        log_type: 'couchbase.http.access.internal'
      operators:
        - type: regex_parser
          regex: '(?P<ip_address>\d+.\d+.\d+.\d+)\s+(?P<user_identifier>.*) \[(?P<timestamp>\d{2}\/\w+\/\d{4}:\d{2}:\d{2}:\d{2} -\d{4})\] \\*"(?P<request_line>[^"]*)\\*" (?P<status>\d{3}) (?P<size>\d*) *-*(?P<message>.*)'
          timestamp:
            parse_from: attributes.timestamp
            layout: '%d/%b/%Y:%H:%M:%S %z'
          severity:
            parse_from: attributes.status
            preset: none
            mapping:
              info: 2xx
              info2: 3xx
              warn: 4xx
              error: 5xx
    {{ end }} ## end internal access log receiver


    {{ if .enable_babysitter_log}}
    filelog/babysitter_logs:
      include: 
        {{ range $fp := .babysitter_log_path }}
        - '{{ $fp }}'
        {{ end }}
      multiline: 
        line_start_pattern: '\[[a-zA-Z_]+:'
      start_at: {{ .start_at }}
      attributes:
        log_type: 'couchbase.babysitter'
      operators:
        - type: regex_parser
          regex: '^\[(?P<type>[^:]*):(?P<couchbase_severity>[^,]*),(?P<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d+-\d{2}:\d{2}),(?P<node>[^@]*)@(?P<host>[^:]*):(?P<source>[^\]]+)\](?P<message>(?s).*[^\n\s])[\n\s]*$'
          timestamp:
            parse_from: attributes.timestamp
            layout: '%Y-%m-%dT%H:%M:%S.%L%j'
          severity:
            parse_from: attributes.couchbase_severity
    {{ end }} ## end babysitter log receiver

    {{ if .enable_xdcr_logs}}
    filelog/xdcr_logs:
      include: 
        {{ range $fp := .xdcr_log_path }}
        - '{{ $fp }}'
        {{ end }}
      multiline: 
        line_start_pattern: '^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}'
      start_at: {{ .start_at }}
      attributes:
        log_type: 'couchbase.xdcr'
      operators:
        - type: regex_parser
          regex: '(?P<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d*-\d{2}:\d{2}) (?P<couchbase_severity>[^ ]*) (?P<type>[^:]*):* (?P<message>.*)'
          timestamp:
            parse_from: attributes.timestamp
            layout: '%Y-%m-%dT%H:%M:%S.%L%j'
          severity:
            parse_from: attributes.couchbase_severity
    {{ end }} ## end xdcr log receiver

  service:
    pipelines:
      logs:
        receivers: 
          {{ if .enable_error_log }}
          - filelog/error_logs
          {{ end }}
          {{ if .enable_debug_log }}
          - filelog/debug_logs
          {{ end }}
          {{ if .enable_info_log }}
          - filelog/info_logs
          {{ end }}
          {{ if .enable_access_log }}
          - filelog/access_logs
          {{ end }}
          {{ if .enable_internal_access_log }}
          - filelog/internal_access_logs
          {{ end }}
          {{ if .enable_babysitter_log }}
          - filelog/babysitter_logs
          {{ end }}
          {{ if .enable_xdcr_log }}
          - filelog/enable_xdcr_logs
          {{ end }}
