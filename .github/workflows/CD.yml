name: CD
on:
  release:
    types: [ prereleased, published ]

jobs:
  # This is the first job run; If any step in this fails OR is skipped (because an if clause fails), the release will not be updated.
  # This protects against releases that don't match specific criteria:
  #   1. Tag must be a semantic version ((v)d.d.d)
  #   2. Release must be a pre-release
  #   3. The tag version must match the version in the VERSION file 
  check-should-edit-release:
    runs-on: ubuntu-latest
    steps:
      - name: Install packages
        run: apt-get install jq
      - name: Check the tag is a semantic version
        id: sem-ver-calc
        run: "[[ $GITHUB_REF =~ ^[0-9]+\\.[0-9]+\\.[0-9]+ ]] && exit 0 || exit 1"
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Check tag matches VERSION file
        run: "[ $GITHUB_REF = $(<VERSION) ] && exit 0 || exit 1"
      - name: Fetch Release Info
        uses: ./.github/actions/get-release-info
        id: release-info
        with:
          tag: ${{ env.GITHUB_REF }}
      - name: Check release is pre-release
        run: exit [ ${{ steps.get-info.outputs.pre-release }} = "true" ] 
        
  setup-environment:
    runs-on: ubuntu-latest
    needs: check-should-edit-release
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Set up Go 1.16
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Setup Go Environment
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Cache Go
        id: go-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-go-modules
        with:
          path: |
            /home/runner/go/pkg/mod
            /home/runner/.cache/go-build
            /home/runner/go/bin
          key: v1-go-pkg-mod-${{ runner.os }}-${{ hashFiles('**/go.mod', '**/go.sum') }}
      - name: Install Dependencies
        if: steps.go-cache.outputs.hit != 'true'
        run: |
          go mod download
          make install-tools
  ci-checks:
    runs-on: ubuntu-latest
    needs: setup-environment
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Set up Go 1.16
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Setup Go Environment
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Cache Go
        id: go-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-go-modules
        with:
          path: |
            /home/runner/go/pkg/mod
            /home/runner/.cache/go-build
            /home/runner/go/bin
          key: v1-go-pkg-mod-${{ runner.os }}-${{ hashFiles('**/go.mod', '**/go.sum') }}
      - name: Install Dependencies
        if: steps.go-cache.outputs.hit != 'true'
        run: |
          go mod download
          make install-tools
      - name: CI Checks
        run: make -j3 check-fmt misspell lint
  test:
    runs-on: ubuntu-latest
    needs: setup-environment
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Set up Go 1.16
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Setup Go Environment
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Cache Go
        id: go-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-go-modules
        with:
          path: |
            /home/runner/go/pkg/mod
            /home/runner/.cache/go-build
            /home/runner/go/bin
          key: v1-go-pkg-mod-${{ runner.os }}-${{ hashFiles('**/go.mod', '**/go.sum') }}
      - name: Install Dependencies
        if: steps.go-cache.outputs.hit != 'true'
        run: |
          go mod download
          make install-tools
      - name: Go Test
        run: make test
  build:
    runs-on: ubuntu-latest
    needs: setup-environment
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Set up Go 1.16
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Setup Go Environment
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Cache Go
        id: go-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-go-modules
        with:
          path: |
            /home/runner/go/pkg/mod
            /home/runner/.cache/go-build
            /home/runner/go/bin
          key: v1-go-pkg-mod-${{ runner.os }}-${{ hashFiles('**/go.mod', '**/go.sum') }}
      - name: Install Dependencies
        if: steps.go-cache.outputs.hit != 'true'
        run: |
          go mod download
          make install-tools
      - name: Build All Targets
        run: make -j4 build-all
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: collector-binaries-${{ github.sha }}
          path: ./build/
          if-no-files-found: error
          retention-days: 1

  # Updates the release with the created binaries and changes it from a pre-release to a fully-fledged release
  update-release:
    runs-on: "ubuntu-latest"
    needs: [ci-checks, test, build]
    steps:
      - name: Install packages
        run: apt-get install jq
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: collector-binaries-${{ github.sha }}
          working-directory: ./build/
      - name: Upload Release Binaries
        uses: ./.github/actions/upsert-release-artifacts
        id: release-info
        with:
          path: ./build/
          tag: ${{ env.GITHUB_REF }}


