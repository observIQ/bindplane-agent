name: CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ published ]

  workflow_dispatch:

jobs:
  setup-environment:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Set up Go 1.17
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Setup Go Environment
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Cache Go
        id: go-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-go-modules
        with:
          path: |
            /home/runner/go/pkg/mod
            /home/runner/.cache/go-build
            /home/runner/go/bin
          key: v1-go-pkg-mod-${{ runner.os }}-${{ hashFiles('**/go.mod', '**/go.sum') }}
      - name: Install Dependencies
        if: steps.go-cache.outputs.hit != 'true'
        run: |
          go mod download
          make install-tools
  ci-checks:
    runs-on: ubuntu-20.04
    needs: [setup-environment]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Set up Go 1.17
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Setup Go Environment
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Cache Go
        id: go-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-go-modules
        with:
          path: |
            /home/runner/go/pkg/mod
            /home/runner/.cache/go-build
            /home/runner/go/bin
          key: v1-go-pkg-mod-${{ runner.os }}-${{ hashFiles('**/go.mod', '**/go.sum') }}
      - name: Install Dependencies
        if: steps.go-cache.outputs.hit != 'true'
        run: |
          go mod download
          make install-tools
      - name: CI Checks
        run: make -j3 check-fmt misspell lint
  test:
    runs-on: ubuntu-20.04
    needs: [setup-environment]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Set up Go 1.17
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Setup Go Environment
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Cache Go
        id: go-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-go-modules
        with:
          path: |
            /home/runner/go/pkg/mod
            /home/runner/.cache/go-build
            /home/runner/go/bin
          key: v1-go-pkg-mod-${{ runner.os }}-${{ hashFiles('**/go.mod', '**/go.sum') }}
      - name: Install Dependencies
        if: steps.go-cache.outputs.hit != 'true'
        run: |
          go mod download
          make install-tools
      - name: Go Test
        run: make test
  build:
    runs-on: ubuntu-20.04
    needs: [setup-environment]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Set up Go 1.17
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Setup Go Environment
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Cache Go
        id: go-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-go-modules
        with:
          path: |
            /home/runner/go/pkg/mod
            /home/runner/.cache/go-build
            /home/runner/go/bin
          key: v1-go-pkg-mod-${{ runner.os }}-${{ hashFiles('**/go.mod', '**/go.sum') }}
      - name: Install Dependencies
        if: steps.go-cache.outputs.hit != 'true'
        run: |
          go mod download
          make install-tools
      - name: Build All Targets
        run: make -j4 build-all
      - name: Build cosign key file
        run: echo $COSIGN_PRIVATE_KEY >> cosign.key
        shell: bash
        env:
          COSIGN_PRIVATE_KEY : ${{secrets.ORG_COSIGN_PRIVATE_KEY}}
      - name: Run GoReleaser
        run: |
          make release-test
        env:
          COSIGN_PWD: ${{ secrets.ORG_COSIGN_PWD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}