name: manual_msi_build
on:
  workflow_dispatch:
    inputs:
      version:
        description: "Collector Version"
        required: true
        default: "v0.0.1"

jobs:
  build-64bit-msi:
    runs-on: windows-2022
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.19"
          check-latest: true
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          version: "v1.16.1"
          args: build --single-target --skip-validate --clean --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Copy Windows Collector Binary
        run: cp dist/collector_windows_amd64_v1/observiq-otel-collector.exe windows/observiq-otel-collector.exe
      - name: Copy Windows Updater Binary
        run: cp dist/updater_windows_amd64_v1/updater.exe windows/updater.exe
      - name: Copy Plugins to MSI Build Directory
        run: cp -r release_deps/plugins windows/
      - name: Copy Example Config
        run: cp config/example.yaml windows/config.yaml
      - name: Copy Logging Config
        run: cp config/logging.yaml windows/logging.yaml
      - name: Copy JMX Receiver Jar
        run: cp release_deps/opentelemetry-java-contrib-jmx-metrics.jar windows/opentelemetry-java-contrib-jmx-metrics.jar
      - name: Copy LICENSE
        run: cp LICENSE windows/LICENSE
      - name: Copy VERSION file
        run: cp release_deps/VERSION.txt windows/VERSION.txt
      # HACK: Copy build directory to C drive to avoid this error, since there must be a relative path from the tempdir that go-msi uses
      # for the MSI to build properly
      - name: Copy Build Dir
        run: |
          cp -r windows C:/build
          echo "C:/build" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      # Installs go-msi and wix.
      - name: Install Build Tools
        run: |
          curl -f -L -o go-msi.exe https://github.com/observIQ/go-msi/releases/download/v2.2.0/go-msi.exe
          curl -f -L -o wix310-binaries.zip http://wixtoolset.org/downloads/v3.10.3.3007/wix310-binaries.zip
          unzip wix310-binaries.zip
        working-directory: C:/build
      - name: "Build MSI from Tagged Release"
        run: go-msi.exe make -m observiq-otel-collector.msi --version ${{ github.event.inputs.version }} --arch amd64
        working-directory: C:/build
      - name: "Upload MSI"
        uses: actions/upload-artifact@v3
        with:
          name: observiq-otel-collector.msi
          path: C:/build/observiq-otel-collector.msi
          # Short lived because this is meant as an action for developers
          retention-days: 1
  build-32bit-msi:
    runs-on: windows-2022
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.19"
          check-latest: true
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          version: "v1.16.1"
          args: build --single-target --skip-validate --clean --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GOARCH: "386"
      - name: Copy Windows Collector Binary
        run: cp dist/collector_windows_386/observiq-otel-collector.exe windows/observiq-otel-collector.exe
      - name: Copy Windows Updater Binary
        run: cp dist/updater_windows_386/updater.exe windows/updater.exe
      - name: Copy Plugins to MSI Build Directory
        run: cp -r release_deps/plugins windows/
      - name: Copy Example Config
        run: cp config/example.yaml windows/config.yaml
      - name: Copy Logging Config
        run: cp config/logging.yaml windows/logging.yaml
      - name: Copy JMX Receiver Jar
        run: cp release_deps/opentelemetry-java-contrib-jmx-metrics.jar windows/opentelemetry-java-contrib-jmx-metrics.jar
      - name: Copy LICENSE
        run: cp LICENSE windows/LICENSE
      - name: Copy VERSION file
        run: cp release_deps/VERSION.txt windows/VERSION.txt
      # HACK: Copy build directory to C drive to avoid this error, since there must be a relative path from the tempdir that go-msi uses
      # for the MSI to build properly
      - name: Copy Build Dir
        run: |
          cp -r windows C:/build
          echo "C:/build" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      # Installs go-msi and wix.
      - name: Install Build Tools
        run: |
          curl -f -L -o go-msi.exe https://github.com/observIQ/go-msi/releases/download/v2.2.0/go-msi.exe
          curl -f -L -o wix310-binaries.zip http://wixtoolset.org/downloads/v3.10.3.3007/wix310-binaries.zip
          unzip wix310-binaries.zip
        working-directory: C:/build
      - name: "Build MSI from Tagged Release"
        run: go-msi.exe make -m observiq-otel-collector-x86.msi --version ${{ github.event.inputs.version }} --arch 386
        working-directory: C:/build
      - name: "Upload MSI"
        uses: actions/upload-artifact@v3
        with:
          name: observiq-otel-collector-x86.msi
          path: C:/build/observiq-otel-collector-x86.msi
          # Short lived because this is meant as an action for developers
          retention-days: 1
