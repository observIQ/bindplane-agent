// Code generated by mockery v2.12.3. DO NOT EDIT.

package mocks

import (
	context "context"

	report "github.com/observiq/observiq-otel-collector/internal/report"
	mock "github.com/stretchr/testify/mock"
)

// MockReporter is an autogenerated mock type for the Reporter type
type MockReporter struct {
	mock.Mock
}

// Report provides a mock function with given fields: config
func (_m *MockReporter) Report(config interface{}) error {
	ret := _m.Called(config)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(config)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Stop provides a mock function with given fields: _a0
func (_m *MockReporter) Stop(_a0 context.Context) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Type provides a mock function with given fields:
func (_m *MockReporter) Type() report.ReporterKind {
	ret := _m.Called()

	var r0 report.ReporterKind
	if rf, ok := ret.Get(0).(func() report.ReporterKind); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(report.ReporterKind)
	}

	return r0
}

type NewMockReporterT interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockReporter creates a new instance of MockReporter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockReporter(t NewMockReporterT) *MockReporter {
	mock := &MockReporter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
