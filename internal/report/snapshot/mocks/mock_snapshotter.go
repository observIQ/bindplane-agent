// Copyright  observIQ, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	"go.opentelemetry.io/collector/pdata/plog"
	"go.opentelemetry.io/collector/pdata/pmetric"
	"go.opentelemetry.io/collector/pdata/ptrace"
)

// MockSnapshotter is an autogenerated mock type for the Snapshotter type
type MockSnapshotter struct {
	mock.Mock
}

// SaveLogs provides a mock function with given fields: componentID, ld
func (_m *MockSnapshotter) SaveLogs(componentID string, ld plog.Logs) {
	_m.Called(componentID, ld)
}

// SaveMetrics provides a mock function with given fields: componentID, md
func (_m *MockSnapshotter) SaveMetrics(componentID string, md pmetric.Metrics) {
	_m.Called(componentID, md)
}

// SaveTraces provides a mock function with given fields: componentID, td
func (_m *MockSnapshotter) SaveTraces(componentID string, td ptrace.Traces) {
	_m.Called(componentID, td)
}

type NewMockSnapshotterT interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockSnapshotter creates a new instance of MockSnapshotter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockSnapshotter(t NewMockSnapshotterT) *MockSnapshotter {
	mock := &MockSnapshotter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
